//generated pixeldata
#ifndef _DataGirlWalk3_h
#define _DataGirlWalk3_h
#include "PixelData.h"
class DataGirlWalk3:public PixelData{ 
public:
    DataGirlWalk3()
   {
       width =7;
        height=8;
       centerX=3;
        centerY=8;
        int size =width*height;
        color = new uint8_t[size*3];
        alpha = new uint8_t[size];
        color[0] =216;
        color[1] =234;
        color[2] =0;
        alpha[0] =0;
        color[3] =216;
        color[4] =234;
        color[5] =0;
        alpha[1] =0;
        color[6] =216;
        color[7] =234;
        color[8] =0;
        alpha[2] =255;
        color[9] =216;
        color[10] =234;
        color[11] =0;
        alpha[3] =255;
        color[12] =216;
        color[13] =234;
        color[14] =0;
        alpha[4] =255;
        color[15] =216;
        color[16] =234;
        color[17] =0;
        alpha[5] =255;
        color[18] =216;
        color[19] =234;
        color[20] =0;
        alpha[6] =0;
        color[21] =216;
        color[22] =234;
        color[23] =0;
        alpha[7] =0;
        color[24] =216;
        color[25] =234;
        color[26] =0;
        alpha[8] =255;
        color[27] =216;
        color[28] =198;
        color[29] =133;
        alpha[9] =255;
        color[30] =216;
        color[31] =198;
        color[32] =133;
        alpha[10] =255;
        color[33] =216;
        color[34] =198;
        color[35] =133;
        alpha[11] =255;
        color[36] =216;
        color[37] =198;
        color[38] =133;
        alpha[12] =255;
        color[39] =216;
        color[40] =234;
        color[41] =0;
        alpha[13] =0;
        color[42] =216;
        color[43] =234;
        color[44] =0;
        alpha[14] =0;
        color[45] =216;
        color[46] =234;
        color[47] =0;
        alpha[15] =255;
        color[48] =216;
        color[49] =198;
        color[50] =133;
        alpha[16] =255;
        color[51] =0;
        color[52] =0;
        color[53] =0;
        alpha[17] =255;
        color[54] =216;
        color[55] =198;
        color[56] =133;
        alpha[18] =255;
        color[57] =0;
        color[58] =0;
        color[59] =0;
        alpha[19] =255;
        color[60] =216;
        color[61] =234;
        color[62] =0;
        alpha[20] =0;
        color[63] =216;
        color[64] =234;
        color[65] =0;
        alpha[21] =255;
        color[66] =216;
        color[67] =234;
        color[68] =0;
        alpha[22] =255;
        color[69] =216;
        color[70] =198;
        color[71] =133;
        alpha[23] =255;
        color[72] =216;
        color[73] =198;
        color[74] =133;
        alpha[24] =255;
        color[75] =216;
        color[76] =198;
        color[77] =133;
        alpha[25] =255;
        color[78] =216;
        color[79] =198;
        color[80] =133;
        alpha[26] =255;
        color[81] =216;
        color[82] =234;
        color[83] =0;
        alpha[27] =255;
        color[84] =216;
        color[85] =234;
        color[86] =0;
        alpha[28] =0;
        color[87] =216;
        color[88] =234;
        color[89] =0;
        alpha[29] =0;
        color[90] =216;
        color[91] =0;
        color[92] =9;
        alpha[30] =255;
        color[93] =216;
        color[94] =0;
        color[95] =9;
        alpha[31] =255;
        color[96] =216;
        color[97] =0;
        color[98] =9;
        alpha[32] =255;
        color[99] =216;
        color[100] =0;
        color[101] =9;
        alpha[33] =255;
        color[102] =216;
        color[103] =234;
        color[104] =0;
        alpha[34] =0;
        color[105] =216;
        color[106] =234;
        color[107] =0;
        alpha[35] =0;
        color[108] =216;
        color[109] =234;
        color[110] =0;
        alpha[36] =0;
        color[111] =216;
        color[112] =0;
        color[113] =9;
        alpha[37] =255;
        color[114] =216;
        color[115] =0;
        color[116] =9;
        alpha[38] =255;
        color[117] =216;
        color[118] =0;
        color[119] =9;
        alpha[39] =255;
        color[120] =216;
        color[121] =0;
        color[122] =9;
        alpha[40] =255;
        color[123] =216;
        color[124] =198;
        color[125] =133;
        alpha[41] =255;
        color[126] =216;
        color[127] =0;
        color[128] =9;
        alpha[42] =0;
        color[129] =216;
        color[130] =0;
        color[131] =9;
        alpha[43] =255;
        color[132] =216;
        color[133] =198;
        color[134] =133;
        alpha[44] =255;
        color[135] =216;
        color[136] =0;
        color[137] =9;
        alpha[45] =255;
        color[138] =216;
        color[139] =0;
        color[140] =9;
        alpha[46] =255;
        color[141] =216;
        color[142] =0;
        color[143] =9;
        alpha[47] =255;
        color[144] =216;
        color[145] =0;
        color[146] =9;
        alpha[48] =255;
        color[147] =216;
        color[148] =0;
        color[149] =9;
        alpha[49] =0;
        color[150] =59;
        color[151] =70;
        color[152] =69;
        alpha[50] =0;
        color[153] =59;
        color[154] =70;
        color[155] =69;
        alpha[51] =255;
        color[156] =59;
        color[157] =70;
        color[158] =69;
        alpha[52] =0;
        color[159] =59;
        color[160] =70;
        color[161] =69;
        alpha[53] =255;
        color[162] =59;
        color[163] =70;
        color[164] =69;
        alpha[54] =0;
        color[165] =216;
        color[166] =0;
        color[167] =9;
        alpha[55] =0;
   };
};
#endif
