//generated pixeldata
#ifndef _DataAlien1Feed_h
#define _DataAlien1Feed_h
#include "PixelData.h"
class DataAlien1Feed:public PixelData{ 
public:
    DataAlien1Feed()
   {
       width =5;
        height=7;
       centerX=2;
        centerY=7;
        int size =width*height;
        color = new uint8_t[size*3];
        alpha = new uint8_t[size];
        color[0] =119;
        color[1] =198;
        color[2] =62;
        alpha[0] =255;
        color[3] =119;
        color[4] =198;
        color[5] =62;
        alpha[1] =0;
        color[6] =216;
        color[7] =255;
        color[8] =252;
        alpha[2] =0;
        color[9] =119;
        color[10] =198;
        color[11] =62;
        alpha[3] =0;
        color[12] =119;
        color[13] =198;
        color[14] =62;
        alpha[4] =255;
        color[15] =119;
        color[16] =198;
        color[17] =62;
        alpha[5] =255;
        color[18] =119;
        color[19] =198;
        color[20] =62;
        alpha[6] =0;
        color[21] =216;
        color[22] =255;
        color[23] =252;
        alpha[7] =0;
        color[24] =119;
        color[25] =198;
        color[26] =62;
        alpha[8] =0;
        color[27] =119;
        color[28] =198;
        color[29] =62;
        alpha[9] =255;
        color[30] =119;
        color[31] =198;
        color[32] =62;
        alpha[10] =255;
        color[33] =119;
        color[34] =198;
        color[35] =62;
        alpha[11] =0;
        color[36] =216;
        color[37] =255;
        color[38] =252;
        alpha[12] =0;
        color[39] =119;
        color[40] =198;
        color[41] =62;
        alpha[13] =0;
        color[42] =119;
        color[43] =198;
        color[44] =62;
        alpha[14] =255;
        color[45] =119;
        color[46] =198;
        color[47] =62;
        alpha[15] =255;
        color[48] =119;
        color[49] =198;
        color[50] =62;
        alpha[16] =0;
        color[51] =216;
        color[52] =255;
        color[53] =252;
        alpha[17] =0;
        color[54] =119;
        color[55] =198;
        color[56] =62;
        alpha[18] =0;
        color[57] =119;
        color[58] =198;
        color[59] =62;
        alpha[19] =255;
        color[60] =119;
        color[61] =198;
        color[62] =62;
        alpha[20] =255;
        color[63] =119;
        color[64] =198;
        color[65] =62;
        alpha[21] =0;
        color[66] =119;
        color[67] =198;
        color[68] =62;
        alpha[22] =0;
        color[69] =119;
        color[70] =198;
        color[71] =62;
        alpha[23] =0;
        color[72] =119;
        color[73] =198;
        color[74] =62;
        alpha[24] =255;
        color[75] =119;
        color[76] =198;
        color[77] =62;
        alpha[25] =255;
        color[78] =216;
        color[79] =255;
        color[80] =252;
        alpha[26] =0;
        color[81] =216;
        color[82] =255;
        color[83] =252;
        alpha[27] =0;
        color[84] =119;
        color[85] =198;
        color[86] =62;
        alpha[28] =0;
        color[87] =119;
        color[88] =198;
        color[89] =62;
        alpha[29] =255;
        color[90] =119;
        color[91] =198;
        color[92] =62;
        alpha[30] =255;
        color[93] =119;
        color[94] =198;
        color[95] =62;
        alpha[31] =255;
        color[96] =216;
        color[97] =255;
        color[98] =252;
        alpha[32] =0;
        color[99] =119;
        color[100] =198;
        color[101] =62;
        alpha[33] =255;
        color[102] =119;
        color[103] =198;
        color[104] =62;
        alpha[34] =255;
   };
};
#endif
