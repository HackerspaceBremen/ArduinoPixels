//generated pixeldata
#ifndef _DataBoyDeath_h
#define _DataBoyDeath_h
#include "PixelData.h"
class DataBoyDeath:public PixelData{ 
public:
    DataBoyDeath()
   {
       width =6;
        height=10;
       centerX=3;
        centerY=10;
        int size =width*height;
        color = new uint8_t[size*3];
        alpha = new uint8_t[size];
        color[0] =216;
        color[1] =255;
        color[2] =252;
        alpha[0] =0;
        color[3] =174;
        color[4] =230;
        color[5] =245;
        alpha[1] =128;
        color[6] =174;
        color[7] =230;
        color[8] =245;
        alpha[2] =128;
        color[9] =174;
        color[10] =230;
        color[11] =245;
        alpha[3] =128;
        color[12] =174;
        color[13] =230;
        color[14] =245;
        alpha[4] =128;
        color[15] =216;
        color[16] =255;
        color[17] =252;
        alpha[5] =0;
        color[18] =216;
        color[19] =255;
        color[20] =252;
        alpha[6] =0;
        color[21] =174;
        color[22] =230;
        color[23] =245;
        alpha[7] =128;
        color[24] =174;
        color[25] =230;
        color[26] =245;
        alpha[8] =128;
        color[27] =174;
        color[28] =230;
        color[29] =245;
        alpha[9] =128;
        color[30] =174;
        color[31] =230;
        color[32] =245;
        alpha[10] =128;
        color[33] =216;
        color[34] =255;
        color[35] =252;
        alpha[11] =0;
        color[36] =174;
        color[37] =230;
        color[38] =245;
        alpha[12] =128;
        color[39] =174;
        color[40] =230;
        color[41] =245;
        alpha[13] =128;
        color[42] =174;
        color[43] =230;
        color[44] =245;
        alpha[14] =128;
        color[45] =174;
        color[46] =230;
        color[47] =245;
        alpha[15] =128;
        color[48] =174;
        color[49] =230;
        color[50] =245;
        alpha[16] =128;
        color[51] =174;
        color[52] =230;
        color[53] =245;
        alpha[17] =128;
        color[54] =216;
        color[55] =255;
        color[56] =252;
        alpha[18] =0;
        color[57] =216;
        color[58] =249;
        color[59] =249;
        alpha[19] =128;
        color[60] =216;
        color[61] =249;
        color[62] =249;
        alpha[20] =128;
        color[63] =216;
        color[64] =249;
        color[65] =249;
        alpha[21] =128;
        color[66] =216;
        color[67] =249;
        color[68] =249;
        alpha[22] =128;
        color[69] =216;
        color[70] =255;
        color[71] =252;
        alpha[23] =0;
        color[72] =216;
        color[73] =255;
        color[74] =252;
        alpha[24] =0;
        color[75] =216;
        color[76] =249;
        color[77] =249;
        alpha[25] =128;
        color[78] =174;
        color[79] =230;
        color[80] =245;
        alpha[26] =128;
        color[81] =216;
        color[82] =249;
        color[83] =249;
        alpha[27] =128;
        color[84] =174;
        color[85] =230;
        color[86] =245;
        alpha[28] =128;
        color[87] =216;
        color[88] =255;
        color[89] =252;
        alpha[29] =0;
        color[90] =216;
        color[91] =255;
        color[92] =252;
        alpha[30] =0;
        color[93] =216;
        color[94] =249;
        color[95] =249;
        alpha[31] =128;
        color[96] =216;
        color[97] =249;
        color[98] =249;
        alpha[32] =128;
        color[99] =216;
        color[100] =249;
        color[101] =249;
        alpha[33] =128;
        color[102] =216;
        color[103] =249;
        color[104] =249;
        alpha[34] =128;
        color[105] =216;
        color[106] =255;
        color[107] =252;
        alpha[35] =0;
        color[108] =216;
        color[109] =249;
        color[110] =249;
        alpha[36] =128;
        color[111] =180;
        color[112] =236;
        color[113] =250;
        alpha[37] =128;
        color[114] =180;
        color[115] =236;
        color[116] =250;
        alpha[38] =128;
        color[117] =180;
        color[118] =236;
        color[119] =250;
        alpha[39] =128;
        color[120] =180;
        color[121] =236;
        color[122] =250;
        alpha[40] =128;
        color[123] =216;
        color[124] =249;
        color[125] =249;
        alpha[41] =128;
        color[126] =216;
        color[127] =255;
        color[128] =252;
        alpha[42] =0;
        color[129] =180;
        color[130] =236;
        color[131] =250;
        alpha[43] =128;
        color[132] =180;
        color[133] =236;
        color[134] =250;
        alpha[44] =128;
        color[135] =180;
        color[136] =236;
        color[137] =250;
        alpha[45] =128;
        color[138] =180;
        color[139] =236;
        color[140] =250;
        alpha[46] =128;
        color[141] =216;
        color[142] =255;
        color[143] =252;
        alpha[47] =0;
        color[144] =216;
        color[145] =255;
        color[146] =252;
        alpha[48] =0;
        color[147] =174;
        color[148] =230;
        color[149] =245;
        alpha[49] =128;
        color[150] =174;
        color[151] =230;
        color[152] =245;
        alpha[50] =128;
        color[153] =174;
        color[154] =230;
        color[155] =245;
        alpha[51] =128;
        color[156] =174;
        color[157] =230;
        color[158] =245;
        alpha[52] =128;
        color[159] =216;
        color[160] =255;
        color[161] =252;
        alpha[53] =0;
        color[162] =216;
        color[163] =255;
        color[164] =252;
        alpha[54] =0;
        color[165] =174;
        color[166] =230;
        color[167] =245;
        alpha[55] =128;
        color[168] =216;
        color[169] =255;
        color[170] =252;
        alpha[56] =0;
        color[171] =216;
        color[172] =255;
        color[173] =252;
        alpha[57] =0;
        color[174] =174;
        color[175] =230;
        color[176] =245;
        alpha[58] =128;
        color[177] =216;
        color[178] =255;
        color[179] =252;
        alpha[59] =0;
   };
};
#endif
